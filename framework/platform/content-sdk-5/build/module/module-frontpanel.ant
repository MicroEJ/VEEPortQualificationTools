<!--
	ANT

	Copyright 2020-2023 MicroEJ Corp. All rights reserved.
	Use of this source code is governed by a BSD-style license that can be found with this software.
	
-->
<project name="module-frontpanel" xmlns:ea="antlib:org.apache.easyant" xmlns:mam="antlib:com.is2t.mam.ant" xmlns:ivy="antlib:org.apache.ivy.ant">

	<!--
		This script ensures to populate front panel v6 dependencies before launching platform
		build.
	-->

	<!-- Check if front panel project is in version 6.x -->
	<target name="module-frontpanel:version:check">
		<property file="${project.dir}/frontpanel/frontpanel.properties" prefix="fp"/>
		<property name="fp.project.dir" location="${project.parent.dir}/${fp.project.name}"/>

		<!-- check if project is fp v6 project -->
		<property name="fp.project.file" location="${fp.project.dir}/.project"/>
		<property name="fp.project.ivy.file" location="${fp.project.dir}/module.ivy"/>
		<condition property="fp.project.isV6">
			<and>
				<available file="${fp.project.dir}" type="dir"/>
				<available file="${fp.project.file}" type="file"/>
				<available file="${fp.project.ivy.file}" type="file"/>
				<resourcecontains resource="${fp.project.file}" substring="&lt;nature&gt;ej.fp.v6.projectnature&lt;/nature&gt;"/>
			</and>
		</condition>
	</target>

	<!-- Resolve dependencies of front panel project -->
	<target name="module-frontpanel:resolve" depends="module-frontpanel:version:check" extensionOf="abstract-compile:compile-ready" if="fp.project.isV6">

		<!-- delete potential dependencies -->
		<delete dir="${fp.project.dir}/lib"/>

		<!--
			Resolve frontpanel project dependencies in a separate Ivy context.
			Use the project ivysettings since front panel artifacts are deployed in the central repository, not in the build types repository.
		-->
		<ivy:settings file="${project.ivy.settings.file}" id="fp.ivysettings"/>
		
		<!-- 
			Resolution of Front Panel must be done in a sandboxed context.
			Backup/Restore the VEE Port module identification during FP project resolution.
			See Ivy Resolve documentation:
			```
					After the call to this task, four properties are set in ant:
					- ivy.organisation
					- ivy.module
					- ivy.revision
					- ivy.resolved.configurations
			```
		-->
		<script language="javascript"><![CDATA[
	    	var organisationBak = project.getProperty('ivy.organisation')
	    	project.setProperty('ivy.organisation.fp.bak', organisationBak)
	    	var moduleBak = project.getProperty('ivy.module')
	    	project.setProperty('ivy.module.fp.bak', moduleBak)
	    	var revisionBak = project.getProperty('ivy.revision')
	    	project.setProperty('ivy.revision.fp.bak', revisionBak)
	    	var resolvedConfigurationsBak = project.getProperty('ivy.resolved.configurations')
	    	project.setProperty('ivy.resolved.configurations.fp.bak', resolvedConfigurationsBak)
	  	]]>
		</script>
		<ivy:resolve
			file="${fp.project.dir}/module.ivy"
			conf="default,provided"
			settingsref="fp.ivysettings"
		/>
		<ivy:retrieve
			pattern="${fp.project.dir}/lib/[type]s/[artifact](-[classifier])-[revision].[ext]"
			settingsref="fp.ivysettings"
		/>
		<script language="javascript"><![CDATA[
	    	var organisationBak = project.getProperty('ivy.organisation.fp.bak')
	    	project.setProperty('ivy.organisation', organisationBak)
	    	var moduleBak = project.getProperty('ivy.module.fp.bak')
	    	project.setProperty('ivy.module', moduleBak)
	    	var revisionBak = project.getProperty('ivy.revision.fp.bak')
	    	project.setProperty('ivy.revision', revisionBak)
	    	var resolvedConfigurationsBak = project.getProperty('ivy.resolved.configurations.fp.bak')
	    	project.setProperty('ivy.resolved.configurations', resolvedConfigurationsBak)
	  	]]>
		</script>
	</target>

</project>
